import tkinter as tk
from tkinter import ttk
from sqlite_api import SQLiteAPI  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —ç—Ç–æ—Ç –º–æ–¥—É–ª—å

class AdminPanelWindow:
    def __init__(self, username):
        self.sqlAPI = SQLiteAPI()
        self.win = tk.Toplevel()  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
        self.win.title("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        self.win.bind('<Escape>', lambda e: self.win.quit()) 

        self.main_canvas = tk.Canvas(master = self.win, height=700, width=1200)
        self.main_canvas.pack(anchor=tk.CENTER, expand=True)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
        self.welcome_label = tk.Label(self.win, text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!")
        self.main_canvas.create_window((10, 10), window= self.welcome_label, anchor=tk.NW)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ç–∞–±–ª–∏—Ü—ã
        self.welcome_label = tk.Label(self.win, text=f"–¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        self.main_canvas.create_window((250, 30), window= self.welcome_label, anchor=tk.NW)

        # –ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        self.table_columns = ('username', 'role', "–£–¥–∞–ª–∏—Ç—å?")
        self.user_table = ttk.Treeview(self.win, columns= self.table_columns, show = 'headings')
        self.user_table.heading('username', text = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        self.user_table.heading('role', text = '–†–æ–ª—å')
        self.user_table.bind("<Button-1>", self.on_table_click)
        self.main_canvas.create_window((10, 60), window= self.user_table, anchor=tk.NW)

        self.label_user_reg = tk.Label(self.win, text=f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        self.main_canvas.create_window((10, 300), window= self.label_user_reg, anchor=tk.NW)

        self.username_reg_title = tk.Label(self.win, text=f"–õ–æ–≥–∏–Ω:")
        self.main_canvas.create_window((10, 330), window= self.username_reg_title, anchor=tk.NW)

        self.password_reg_title = tk.Label(self.win, text=f"–ü–∞—Ä–æ–ª—å:")
        self.main_canvas.create_window((90, 330), window= self.password_reg_title, anchor=tk.NW)

        self.username_reg = tk.Text(self.win)
        self.main_canvas.create_window((10, 360), window= self.username_reg, anchor=tk.NW, width=60, height=20)

        self.password_reg = tk.Text(self.win)
        self.main_canvas.create_window((90, 360), window= self.password_reg, anchor=tk.NW, width=60, height=20)

        self.reg_user_but = tk.Button(self.win, text="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", command=self.reg_new_user)
        self.main_canvas.create_window((10, 390), window= self.reg_user_but, anchor=tk.NW)

        self.welcome_label = tk.Label(self.win, text=f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á—ë—Ç–æ–≤")
        self.main_canvas.create_window((750, 30), window= self.welcome_label, anchor=tk.NW)
        
        self.win.after(500, self.update_user_table)
        self.win.mainloop()

    def reg_new_user(self):
        username = self.username_reg.get("1.0", tk.END).rstrip()
        password = self.password_reg.get("1.0", tk.END).rstrip()
        self.sqlAPI.add_user(username, password, "user")
    
    def on_table_click(self, event):
        item = self.user_table.identify_row(event.y)
        column = self.user_table.identify_column(event.x)

        name, role, _ = self.user_table.item(item, 'values')
        if str(column) == "#3":
            self.sqlAPI.delete_user_by_username(name)

    def update_user_table(self):
        self.user_table.delete(*self.user_table.get_children())
        for item in self.sqlAPI.get_users():
            name, priveleges = item
            self.user_table.insert('', 'end', values=(name, priveleges, "üóë"))
        self.win.after(500, self.update_user_table)

class AdminLoginWindow:
    def __init__(self):
        self.sqlAPI = SQLiteAPI()

        self.win = tk.Tk()
        self.win.title("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ üóë
        self.win_title = tk.Label(self.win, text="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        self.win_title.pack(anchor=tk.CENTER)

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.username_title = tk.Label(self.win, text="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        self.username_title.pack(anchor=tk.CENTER)
        self.username_string = tk.StringVar()
        self.username_widget = tk.Entry(self.win, textvariable=self.username_string)
        self.username_widget.pack(anchor=tk.CENTER)

        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
        self.password_title = tk.Label(self.win, text="–ü–∞—Ä–æ–ª—å")
        self.password_title.pack(anchor=tk.CENTER)
        self.password_string = tk.StringVar()
        self.password_widget = tk.Entry(self.win, textvariable=self.password_string, show="*")  # –°–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
        self.password_widget.pack(anchor=tk.CENTER)

        # –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞
        self.log_button = tk.Button(self.win, text="–í–æ–π—Ç–∏", command=self.login)
        self.log_button.pack(anchor=tk.CENTER, pady=10)

        # –ú–µ—Ç–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
        self.error_label = tk.Label(self.win, text="", fg="red")
        self.error_label.pack(anchor=tk.CENTER)

        self.win.mainloop()

    def login(self):
        username = self.username_string.get()
        password = self.password_string.get()

        if self.sqlAPI.login(username, password):
            self.error_label.config(text="")  # –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            self.win.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ
            AdminPanelWindow(username)  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        else:
            self.error_label.config(text="–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    AdminLoginWindow()